services:
  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"
    networks:
      - resource_platform_network

  resource-db:
    image: postgres:17
    container_name: resource-db
    environment:
      POSTGRES_DB: ${POSTGRES_RESOURCE_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_RESOURCE_PORT}
    networks:
      - resource_platform_network
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d

  song-db:
    image: postgres:17
    container_name: song-db
    environment:
      POSTGRES_DB: ${POSTGRES_SONG_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_SONG_PORT}
    networks:
      - resource_platform_network
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d


  resourceservice:
    build: ./resourceservice
    container_name: resource-service
    ports:
      - "8081:8081"
    depends_on:
      - resource-db
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: ${RESOURCE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SONG_SERVICE_URL: ${SONG_SERVICE_URL}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_SERVER_URL}
    networks:
      - resource_platform_network

  songservice:
    build: ./songservice
    ports:
      - "8082-8083:8082"
    depends_on:
      - song-db
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: ${SONG_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_SERVER_URL}
    networks:
      - resource_platform_network
    deploy:
      replicas: 2

networks:
  resource_platform_network:
    driver: bridge